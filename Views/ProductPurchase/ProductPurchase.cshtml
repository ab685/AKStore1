@model IEnumerable<AKStore.Models.ProductPurchaseModel>
@{
    ViewBag.Title = "ProductPurchase";
}
<style>
    img.thumbnail {
        border: 1px solid #ddd; /* Gray border */
        border-radius: 4px; /* Rounded border */
        padding: 5px; /* Some padding */
        width: 100px; /* Set a small width */
        max-height: 120px;
    }
        /* Add a hover effect (blue shadow) */
        img.thumbnail:hover {
            box-shadow: 0 0 2px 1px rgba(0, 140, 186, 0.5);
        }
</style>
@*<p>
        <a href="@Url.Action("UpsertProductPurchase")" class="btn btn-grad"><i class="fas fa-plus-circle"></i> Add New ProductPurchase</a>
    </p>*@
<div class="card shadow-lg card-outline card-purple elevation-2">
    <div class="card-header">
        <h6 class="m-0 font-weight-bold text-primary">Product Purchase</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="tblProductPurchase" class="table table-bordered">
                <thead class="success">
                    <tr>
                        <th>@Html.DisplayName("Product Name")</th>
                        <th>@Html.DisplayName("Price")</th>
                        <th>@Html.DisplayName("Purchased Qty")</th>
                        <th>@Html.DisplayName("Added By")</th>
                        <th>@Html.DisplayName("Added Date")</th>
                        <th>@Html.DisplayName("Updated By")</th>
                        <th>@Html.DisplayName("Updated Date")</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                            <td>@Html.DisplayFor(modelItem => item.PurchasePrice)</td>
                            <td>@Html.DisplayFor(modelItem => item.Quantity) </td>
                            <td>@Html.DisplayFor(modelItem => item.AddedBy) </td>
                            <td>
                                @if (item.AddedDate.HasValue == true)
                                {
                                    @item.AddedDate.Value.ToString("dd-MM-yyyy hh:mm tt");
                                }
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.UpdatedBy) </td>
                            <td>
                                @if (item.UpdatedDate.HasValue == true)
                                {
                                    @item.UpdatedDate.Value.ToString("dd-MM-yyyy hh:mm tt");
                                }
                            </td>
                            <td style="display:flex">
                                <a onclick="OpenChangeProductPurchaseModal(@item.Id, @item.ProductId,@item.Quantity,@item.PurchasePrice, '@item.ProductName')" href="#" class="editbutton btn btn-outline-primary"><i class="fas fa-pen-alt"></i></a> |
                                @*<a href="@Url.Action("UpsertProductPurchase","ProductPurchase",new { id = item.Id })" class="editbutton btn btn-outline-primary"><i class="fas fa-pen-alt"></i></a> |*@
                                <a onclick="OpenDeleteModal(@item.Id)" href="#" class="btn btn-outline-primary deletebutton"><i class="fas fa-trash"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="modal fade" id="ProductPurchaseDeleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header card-header">
                <h5 class="modal-title" id="exampleModalLabel">Product Purchase</h5>
            </div>
            <div class="modal-body card-body">
                <label>Are you sure you want to delete Product Purchase?</label>
                <form method="post" action="@Url.Action("DeleteProductPurchase","ProductPurchase")">
                    <input type="hidden" name="id" id="hdnDelId" />
                    <button type="submit" class="btn btn-delete">Delete</button>
                    <button type="button" class="btn btn-secondary " data-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ChangeProductPurchaseModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header card-header">
                <h5 class="modal-title" id="exampleModalLabel" style="display:block">Product Purchase</h5>
                <span id="ProductPurchaseName" style="display:block;" class="small"></span>
            </div>
            <div class="modal-body card-body">
                <form method="post" action="@Url.Action("ChangeProductPurchaseData","ProductPurchase")">
                    <input type="hidden" name="productPurchaseId" id="hdnProductPurchase" />
                    <input type="hidden" name="productId" id="hdnProdId" />
                    <div class="form-group">
                        <label class="">Quantity</label>
                        <input type="number" data-val="true" data-val-required="Quantity is required" class="form-control mr-1"
                               name="quantity" id="txtQuantity" min="1" required onkeypress="return isNumber(event,true)"
                               placeholder="Enter Quantity" 
                               aria-describedby="quantity-error" aria-invalid="false" />
                        <span class="text-danger field-validation-valid" data-valmsg-for="quantity" data-valmsg-replace="true"></span>

                    </div>
                    <div class="form-group">
                        <label class="">Purchase Price</label>
                        <input type="number" class="form-control" name="price" id="txtPrice" min="0.01" step="0.01" data-val="true" data-val-range-min="0.01"
                               data-val-range="Purchase Price can't be Zero" required onkeypress="return isNumber(event)"
                               placeholder="Enter Price" data-val-required="Purchase Price is required"
                               aria-describedby="price-error" aria-invalid="false" />
                        <span class="text-danger field-validation-valid" data-valmsg-for="price" data-valmsg-replace="true"></span>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-secondary " data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script>
        $(document).ready(function () {
            $('#tblProductPurchase').DataTable({
                "pageLength": 50,
                "order": [],
            });
        });
        function OpenDeleteModal(id) {
            $("#ProductPurchaseDeleteModal").modal("show");
            $("#hdnDelId").val(id);
        }
        function OpenChangeProductPurchaseModal(id,ProductId, quantity, price,pname) {
            $("#hdnProductPurchase").val(id);
            $("#hdnProdId").val(ProductId);
            $("#txtQuantity").val(quantity);
            $("#txtPrice").val(price);
            $("#ProductPurchaseName").text(pname);
            $("#ChangeProductPurchaseModal").modal("show");
        }
        function SaveProductPurchaseChangeData() {
            ClearControlsError();
            var ProductPurchaseId = $("#hdnProductPurchase").val();
            var ProductId = $("#hdnProdId").val();
            var quantity = $("#txtQuantity").val();
            var price = $("#txtPrice").val();
            var isValid = true;
            if (!ProductPurchaseId) {
                isValid = false;
            }
            if (!ProductId) {
                isValid = false;
            }

            if (!quantity || Number(quantity)<  0) {
                isValid = false;
                $("#errorQuantity").text("Please enter quantity");
            }
            if (!price || Number(price)<  0) {
                isValid = false;
                $("#errorPrice").text("Please enter price");
            }
            if (!isValid) {
                return;
            }
            var postedData = {
                productPurchaseId: ProductPurchaseId,
                productId: ProductId,
                quantity: quantity,
                price: price
            };
            $.ajax({
                type: "POST",
                url: '@Url.Action("ChangeProductPurchaseData", "ProductPurchase")',
                data: postedData,
                success: function (response) {
                    if (response.Success) {
                        toastr.success(response.Message);
                        window.location.href = '@Url.Action("ProductPurchases", "ProductPurchase")';
                    } else {
                        toastr.error(response.Message);
                    }
                },
                error: function (error) {
                    toastr.error(error.Message);
                }
            });
        }
        function ClearControlsError() {
            $("#errorQuantity").text("");
            $("#errorPrice").text("");
        }
        function isNumber(evt, allowIntOnly) {
            if (allowIntOnly) {
                if (evt.charCode == 45 || evt.charCode == 46 || evt.charCode == 101) {
                    return false;
                } else {
                    return true;
                }
            } else {
                if (evt.charCode == 45 || evt.charCode == 101) {
                    return false;
                } else {
                    return true;
                }
            }
           
        }
    </script>
}
