<style>
    img.thumbnail {
        border: 1px solid #ddd; /* Gray border */
        border-radius: 4px; /* Rounded border */
        padding: 5px; /* Some padding */
        width: 100px; /* Set a small width */
        max-height: 120px;
    }

        /* Add a hover effect (blue shadow) */
        img.thumbnail:hover {
            box-shadow: 0 0 2px 1px rgba(0, 140, 186, 0.5);
        }
</style>
<div class="card shadow-lg">
    <div class="card-header">
        <h6 class="m-0 font-weight-bold text-primary">Orders</h6>
    </div>
    <div class="card-body">
        <div class="form-horizontal">
            <div class="row">
                <div class="col-12 col-md-3">
                    <label>Customer</label>
                    <select id="drpCustomers" class="form-control" onchange="GetOrderData()">
                    </select>
                </div>
                <div class="col-12 col-md-3">
                    <label style="text-align:center">Order Status</label>
                    <select id="drpOrderStatus" class="form-control" onchange="GetOrderData()" >
                        <option value="0">All</option>
                        <option value="1" selected>Ordered</option>
                        <option value="2">Confirmed</option>
                        <option value="3">Delivered</option>
                        <option value="4">Canceled</option>
                    </select>
                </div>
                <div class="col-12 col-md-3">
                    <label for="saleDate" style="display:block">From Date</label>
                    <input type="text" id="FromDate" class="form-control datepicker" style="background-color: white;" readonly />
                </div>
                <div class="col-12 col-md-3">
                    <label for="saleDate" style="display:block">To Date</label>
                    <input type="text" id="ToDate" class="form-control datepicker" style="background-color:white;" readonly />
                </div>
                <br />
                <br />
                <br />
                <br />
                <div class="col-12">
                    <button class="btn btn-sm btn-outline-primary" onclick="GenerateBill()">Bill</button>
                    <button class="btn btn-sm btn-outline-success" onclick="ChangeOrderStatus(1)">Ordered</button>
                    <button class="btn btn-sm btn-outline-info" onclick="ChangeOrderStatus(2)">Confirmed</button>
                    <button class="btn btn-sm btn-outline-warning" onclick="ChangeOrderStatus(3)">Deliverd</button>
                    <button class="btn btn-sm btn-outline-secondary" onclick="ChangeOrderStatus(4)">Cancel</button>
                    <button class="btn btn-sm btn-outline-danger" onclick="ChangeOrderStatus(11)">Delete</button>
                </div>
                <div class="table-responsive" id="divOrder" style="margin:20px;">
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script>
        $(document).ready(function () {
            ConfigureDate();
            GetCustomers();
        });
        function ConfigureDate() {
            var today = new Date();
            var previoisMonthDate = new Date(new Date().getFullYear(), new Date().getMonth() - 1, new Date().getDate());

            $("#FromDate").datepicker({

                showOtherMonths: true,
                selectOtherMonths: true,
                changeMonth: true,
                changeYear: true,
                dateFormat: 'dd/mm/yy',
                maxDate: today
            });

            $("#FromDate").datepicker("setDate", previoisMonthDate)
                .on("change", function () {
                    GetOrderData();
                });
            $("#ToDate").datepicker({

                showOtherMonths: true,
                selectOtherMonths: true,
                changeMonth: true,
                changeYear: true,
                dateFormat: 'dd/mm/yy',
                maxDate: today

            })
            $("#ToDate").datepicker("setDate", today)
                .on("change", function () {
                    GetOrderData();
                });
        }
        function GetCustomers() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCustomerData", "Customer")',
                success: function (response) {
                    if (response.Success) {

                        var htmlRoute = "<option value=" + 0 + ">--All--</option>";
                        response.Data.filter(function (item) {
                            htmlRoute += GenrateDropDown(item.Id, item.StoreName);
                        });
                        $("#drpCustomers").html(htmlRoute);
                        GetOrderData();
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
        }
        function GetOrderData() {
            var customerId = $("#drpCustomers").val();
            var orderStatusId = $("#drpOrderStatus").val();
            var fromDate = ConvertDateToDDMMYY($("#FromDate").val());
            var toDate = ConvertDateToDDMMYY($("#ToDate").val());
            var postData = {
                CustomerId: customerId,
                OrderStatusId: orderStatusId,
                FromDate: fromDate,
                ToDate: toDate
            };
            $.ajax({
                type: "GET",
                url: '@Url.Action("DistributorOrdersData", "Orders")',
                data: postData,
                success: function (response) {
                    if (response.Success) {

                        BindOrdersGrid(response);
                    }
                    else {
                        toastr.error(response.Message);
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
        }
        function ChangeOrderStatus(statusId) {
            var selectedId = [];

            $("#tblOrder > tbody > tr > td >input[type='checkbox']").each(function (index, ele) {
                if ($(ele).prop("checked")) {
                    var eleid = ele.id.split("_");
                    selectedId.push(eleid[1]);
                }
            });
            if (selectedId.length <= 0) {
                return toastr.warning("Please select record");
            }
            var customerId = $("#drpCustomers").val();
            var orderStatusId = $("#drpOrderStatus").val();
            var fromDate = ConvertDateToDDMMYY($("#FromDate").val());
            var toDate = ConvertDateToDDMMYY($("#ToDate").val());
            var distributorOrderModel = {
                CustomerId: customerId,
                OrderStatusId: orderStatusId,
                FromDate: fromDate,
                ToDate: toDate
            };
            var postData = {
                selectedIds: selectedId,
                orderStatusId: statusId,
                distributorOrderModel: distributorOrderModel
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("ChangeOrderStatus", "Orders")',
                data: postData,
                success: function (response) {
                    if (response.Success) {
                        BindOrdersGrid(response);
                        toastr.success(response.Message);
                    }
                    else {
                        toastr.error(response.Message);
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
            selectedId = [];
        }
        function BindOrdersGrid(response) {
            var strHtml = `<table class="table table-bordered" id="tblOrder">
                                    <thead class="success">
                                        <tr>
                                            <th><input type='checkbox' id='chk_main' onchange='ChangeMainCheckBox(this)'/></th>
                                            <th style='display:none'></th>
                                            <th>Picture</th>
                                            <th>Product</th>
                                            <th>Store</th>
                                            <th>Unit Price</th>
                                            <th>Qty</th>
                                            <th>Total</th>
                                            <th>Date</th>
                                            <th>Status</th>
                                            <th></th>
                                        </tr>
                                    </thead>`;
            response.data.forEach(function (item) {
                strHtml += `<tr>
                                    <td><input type='checkbox' id=chk_${item.Id}_pr /></td>
                                    <td style="display:none">${item.Id}</td>
                                    <td>
                                      <img class="thumbnail" src='/Documents/images/product/${((item.FilePath == "" || item.FilePath == null) ?"NoImage.png":item.FilePath)}' />
                                     </td>
                                      <td>
                                        ${item.ProductName}
                                     </td>
                                    <td id=store_${item.Id}_pr>${item.StoreName}</td>
                                    <td>${item.Price}</td>
                                    <td>${item.Quantity}</td>
                                    <td>${item.Total}</td>
                                    <td>${parseJsonFormattedDate(item.OrderDate)}</td>
                                    <td id=status_${item.Id}_pr>${GetOrderStatusFromId(item.OrderStatusId)}</td>
                                    <td><a href="/Orders/EditDistributorOrders/${item.Id}" class="editbutton btn btn-outline-primary"><i class="fas fa-pen-alt"></i></a></td>
                               </tr>`;
            });
            strHtml += `</table>`;
            $("#divOrder").html(strHtml);
            $('#tblOrder').addClass("table-striped");
            $('#tblOrder').DataTable({
                "pageLength": 50,
                order: [],
            });
        }
        function GetOrderStatusFromId(statusId) {
            if (statusId == 1) {
                return '<center><span style="background-color:#4e73df;color:white;padding:2px">Ordered</span></center>'
            } else if (statusId == 2) {
                return '<center><span style="background-color:#00adff;color:white;padding:2px">Confirmed</span></center>'
            } else if (statusId == 3) {
                return '<center><span style="background-color:#e7923b;color:white;padding:2px">Delivered</span></center>'
            } else if (statusId == 4) {
                return '<center><span style="background-color:#666;color:white;padding:2px">Canceled</span></center>'
            } else {
                return;
            }
        }
        function ChangeMainCheckBox(chk) {
            var flag = $(chk).prop("checked");
            $("#tblOrder > tbody > tr > td >input[type='checkbox']").each(function (index, ele) {
                $(ele).prop("checked", flag);
            })
        }
        function GenerateBill() {
            var selectedId = [];
            var storeName = [];
            var orderStatus = [];
            $("#tblOrder > tbody > tr > td >input[type='checkbox']").each(function (index, ele) {
                if ($(ele).prop("checked")) {
                    var eleid = ele.id.split("_");
                    selectedId.push(eleid[1]);
                    if ($(`#store_${eleid[1]}_pr`).text()) {
                        storeName.push($(`#store_${eleid[1]}_pr`).text());
                        orderStatus.push($(`#status_${eleid[1]}_pr`).text());
                    }
                }
            });

            if (selectedId.length <= 0) {
                return toastr.warning("Please select record");
            }

            if (!storeName.every(item => item === storeName[0])) {
                return toastr.warning("Please select record of same store");
            }
            if (!orderStatus.every(item => item =="Delivered")) {
                return toastr.warning("Please select record of Delivered status");
            }
            var postData = {
                selectedIds: selectedId
            }
             $.ajax({
                type: "POST",
                url: '@Url.Action("BillsPDF", "Bills")',
                data: postData,
                xhr: function () {
                     var xhr = new XMLHttpRequest();
                     xhr.onreadystatechange = function () {
                         if (xhr.readyState == 2) {
                             if (xhr.status == 200) {
                                 xhr.responseType = "blob";
                             } else {
                                 xhr.responseType = "text";
                             }
                         }
                     };
                     return xhr;
                 },
                success: function (response) {
                    let date_ob = new Date();

                    // adjust 0 before single digit date
                    let date = ("0" + date_ob.getDate()).slice(-2);

                    // current month
                    let month = ("0" + (date_ob.getMonth() + 1)).slice(-2);

                    // current year
                    let year = date_ob.getFullYear();

                    // current hours
                    let hours = date_ob.getHours();

                    // current minutes
                    let minutes = date_ob.getMinutes();

                    // current seconds
                    let seconds = date_ob.getSeconds();

                    // prints date & time in YYYY-MM-DD HH:MM:SS format
                    date_format_str= year + "-" + month + "-" + date + " " + hours + ":" + minutes + ":" + seconds;
                    downloadFile(new Blob([response], { type: 'application/text' }), "Bills_" + storeName[0]+"_" + date_format_str+".pdf");
                },
                error: function (error) {
                    alert(error);
                }
            });
            selectedId = [];
        }
        function downloadFile(blob, fileName) {
            const link = document.createElement('a');
            // create a blobURI pointing to our Blob
            link.href = URL.createObjectURL(blob);
            link.download = fileName;
            // some browser needs the anchor to be in the doc
            document.body.append(link);
            link.click();
            link.remove();
            // in case the Blob uses a lot of memory
            setTimeout(() => URL.revokeObjectURL(link.href), 5000);
        };
    </script>
}
