@model AKStore.Models.DistributorOrderDataModel

@{
    ViewBag.Title = "Edit Order";
}

<div class="container">

    <div class="row">
        <div class="col-lg-12">
            <div class="card mb-4 shadow">
                <div class="card-header">
                    <h6 class="m-0 font-weight-bold text-primary">Admin</h6>
                </div>
                <div class="card-body">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <div class="col-12 col-md-6">
                                <div class="form-group">
                                    @Html.HiddenFor(x => x.Id)
                                    @Html.Label("Company", htmlAttributes: new { @class = "small mb-1" })
                                    @Html.DropDownListFor(model => model.ProductId, Model.Products, "--Select--", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-12 col-md-6">
                                <div class="form-group">
                                    @Html.Label("Status", htmlAttributes: new { @class = "small mb-1" })
                                    @Html.DropDownListFor(model => model.OrderStatusId,
                                                          new List<SelectListItem>()
                                                          {
                                                                  new SelectListItem { Text="Orderd",Value="1"},
                                                                  new SelectListItem { Text="Confirmed",Value="2"},
                                                                  new SelectListItem { Text="Delivered",Value="3"},
                                                                  new SelectListItem { Text="Canceled",Value="4"}
                                                          }, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "small mb-1" })
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Price", onchange = "ChangePriceQty()", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "small mb-1" })
                                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Quantity", onchange = "ChangePriceQty()", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @Html.HiddenFor(x => x.CustomerId)
                            <div class="col-12 col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "small mb-1" })
                                    @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Quantity" } })
                                    @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-12 col-md-12">
                                <div class="form-group">
                                    <input type="submit" value="Save" class="btn btn-grad" />
                                    <a href='@Url.Action("DistributorOrders")' class="btn  btn-secondary ">Back to List</a>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>

    </div>
</div>
@section scripts {
    <script>
        function ChangePriceQty() {
            var price = $("#Price").val();
            var quantity = $("#Quantity").val();
            if (Number(quantity) && Number(price)) {
                $("#Total").val(Number(quantity) * Number(price));
            }
        }
    </script>

}