@model IEnumerable<AKStore.Models.ProductModel>

@{
    ViewBag.Title = "Products";
}
<style>
    img.thumbnail {
        border: 1px solid #ddd; /* Gray border */
        border-radius: 4px; /* Rounded border */
        padding: 5px; /* Some padding */
        width: 100px; /* Set a small width */
        max-height: 120px;
    }

        /* Add a hover effect (blue shadow) */
        img.thumbnail:hover {
            box-shadow: 0 0 2px 1px rgba(0, 140, 186, 0.5);
        }
</style>
@if (Convert.ToInt32(Session["RoleId"]) == 2)
{
    <p>
        <a href="@Url.Action("UpsertProduct")" class="btn btn-grad"><i class="fas fa-plus-circle"></i> Add New Product</a>
    </p>
}

<div class="card shadow-lg">
    <div class="card-header">
        <h6 class="m-0 font-weight-bold text-primary">Products</h6>
    </div>
    <div class="card-body">

        <div class="table-responsive">
            <table id="tblProduct" class="table table-bordered">
                <thead class="success">
                    <tr>
                        <th>@Html.DisplayName("Product")</th>
                        <th>@Html.DisplayName("Company")</th>
                        <th>@Html.DisplayName("Category")</th>
                        <th>@Html.DisplayName("Price")</th>
                        <th>@Html.DisplayName("Avl Qty")</th>
                        <th>@Html.DisplayName("Ordered Qty")</th>
                        <th>@Html.DisplayName("Picture")</th>

                        <th></th>


                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.CompanyName) </td>
                            <td>@Html.DisplayFor(modelItem => item.CategoryName) </td>
                            <td>@Html.DisplayFor(modelItem => item.Price) </td>
                            <td>@Html.DisplayFor(modelItem => item.Quantity) </td>
                            <td>@Html.DisplayFor(modelItem => item.OrderedQuantity) </td>
                            <td style="width:2%"><img class="thumbnail" src="@Url.Content("~/Documents/images/product/"+(string.IsNullOrEmpty(item.FilePath) ?"NoImage.png":item.FilePath))" /> </td>
                            @if (Convert.ToInt32(Session["RoleId"]) == 2)
                            {
                                <td style="display:flex">
                                    <a href="@Url.Action("UpsertProduct","Product",new { id = item.Id })" class="editbutton btn btn-outline-primary"><i class="fas fa-pen-alt"></i></a> |
                                    <a onclick="OpenDeleteModal(@item.Id)" href="#" class="btn btn-outline-primary deletebutton"><i class="fas fa-trash"></i></a>
                                </td>
                            }
                            @if (Convert.ToInt32(Session["RoleId"]) == 3)
                            {
                                <td style="display:flex">
                                    <a onclick="OpenChangeProductModal(@item.Id,@item.Quantity,@item.Price,'@item.Name')" href="#" class="editbutton btn btn-outline-primary"><i class="fas fa-pen-alt"></i></a>
                                </td>
                            }


                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="modal fade" id="ProductDeleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header card-header">
                <h5 class="modal-title" id="exampleModalLabel">Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body card-body">
                <label>Are you sure you want to delete product?</label>
                <form method="post" action="@Url.Action("DeleteProduct","Product")">
                    <input type="hidden" name="id" id="hdnDelId" />
                    <button type="submit" class="btn btn-delete">Delete</button>
                    <button type="button" class="btn btn-secondary " data-dismiss="modal">Close</button>
                </form>

            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ChangeProductModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header card-header">
                <h5 class="modal-title" id="exampleModalLabel">Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body card-body">
                <form method="post" action="@Url.Action("ChangeProductData","Product")">
                    <input type="hidden" name="id" id="hdnProdId" />
                    <label id="productName" style="display:block"></label>
                    <input type="number" class="form-control mr-1" name="quantity" id="txtQuantity" min="0" required style="width:45%;float:left" onkeypress="return isNumber(event)"/>
                    <input type="number" class="form-control" name="price" id="txtPrice" min="0" required  style="width:45%;" onkeypress="return isNumber(event)"/>
                  <div class="mt-2">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary " data-dismiss="modal">Close</button>
                    </div>
                </form>

            </div>
        </div>
    </div>
</div>
@section scripts {
    <script>
        $(document).ready(function () {
            $('#tblProduct').DataTable({
                "pageLength": 50,
                "order": [],
            });
        });

        function OpenDeleteModal(id) {
            $("#ProductDeleteModal").modal("show");
            $("#hdnDelId").val(id);
        }
        function OpenChangeProductModal(id, quantity, price,pname) {
            $("#hdnProdId").val(id);
            $("#txtQuantity").val(quantity);
            $("#txtPrice").val(price);
            $("#productName").text(pname);
            $("#ChangeProductModal").modal("show");
        }
        function SaveProductChangeData() {
            ClearControlsError();
            var Id = $("#hdnId").val();
            var quantity = $("#txtQuantity").val();
            var price = $("#txtPrice").val();
            var isValid = true;
            if (!Id) {
                isValid = false;
            }
            if (!quantity || Number(quantity)<  0) {
                isValid = false;
                $("#errorQuantity").text("Please enter quantity");
            }
            if (!price || Number(price)<  0) {
                isValid = false;
                $("#errorPrice").text("Please enter price");
            }

            if (!isValid) {
                return;
            }
            var postedData = {
                productId: Id,
                quantity: quantity,
                price: price
            };
            $.ajax({
                type: "POST",
                url: '@Url.Action("ChangeProductData", "Product")',
                data: postedData,
                success: function (response) {
                    if (response.Success) {
                        toastr.success(response.Message);
                        window.location.href = '@Url.Action("Products", "Product")';
                    } else {
                        toastr.error(response.Message);
                    }
                },
                error: function (error) {
                    toastr.error(error.Message);

                }
            })
        }
        function ClearControlsError() {
            $("#errorQuantity").text("");
            $("#errorPrice").text("");
        }
        function isNumber(evt) {
            
            if (evt.charCode == 45 || evt.charCode == 101) {
                return false;
            } else {
                return true;
            }
        }
    </script>
}